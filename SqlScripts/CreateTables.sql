CREATE TABLE [USER] (
    CNP NVARCHAR(50) PRIMARY KEY,
    NAME NVARCHAR(100),
    DESCRIPTION NVARCHAR(MAX),
    IS_HIDDEN BIT,
    IS_ADMIN BIT,
    PROFILE_PICTURE NVARCHAR(MAX),
    GEM_BALANCE INT
);

CREATE TABLE STOCK (
    STOCK_NAME NVARCHAR(100) PRIMARY KEY,
    STOCK_SYMBOL NVARCHAR(20),
    AUTHOR_CNP NVARCHAR(50),
    FOREIGN KEY (AUTHOR_CNP) REFERENCES [USER](CNP)
);

CREATE TABLE STOCK_VALUE (
    STOCK_VALUE_ID INT IDENTITY(1,1) PRIMARY KEY,
    STOCK_NAME NVARCHAR(100),
    PRICE INT,
    FOREIGN KEY (STOCK_NAME) REFERENCES STOCK(STOCK_NAME)
);

CREATE TABLE USER_STOCK (
    USER_CNP NVARCHAR(50),
    STOCK_NAME NVARCHAR(100),
    QUANTITY INT,
    FOREIGN KEY (USER_CNP) REFERENCES [USER](CNP),
    FOREIGN KEY (STOCK_NAME) REFERENCES STOCK(STOCK_NAME)
);

CREATE TABLE FAVORITE_STOCK (
    USER_CNP NVARCHAR(50),
    STOCK_NAME NVARCHAR(100),
    IS_FAVORITE BIT,
    FOREIGN KEY (USER_CNP) REFERENCES [USER](CNP),
    FOREIGN KEY (STOCK_NAME) REFERENCES STOCK(STOCK_NAME)
);

CREATE TABLE USERS_TRANSACTION (
    TRANSACTION_ID INT IDENTITY(1,1) PRIMARY KEY,
    USER_CNP NVARCHAR(50),
    STOCK_NAME NVARCHAR(100),
    TYPE INT,
    QUANTITY INT,
    PRICE INT,
    DATE NVARCHAR(50),
    FOREIGN KEY (USER_CNP) REFERENCES [USER](CNP),
    FOREIGN KEY (STOCK_NAME) REFERENCES STOCK(STOCK_NAME)
);

CREATE TABLE ALERTS (
    ALERT_ID INT IDENTITY(1,1) PRIMARY KEY,
    STOCK_NAME NVARCHAR(100),
    NAME NVARCHAR(100),
    LOWER_BOUND INT,
    UPPER_BOUND INT,
    TOGGLE BIT,
    FOREIGN KEY (STOCK_NAME) REFERENCES STOCK(STOCK_NAME)
);

-- Somebody forgot to add the full definition for TRIGGERED_ALERTS

-- CREATE TABLE TRIGGERED_ALERTS (
--    SOCK_NAME NVARCHAR(100),
--    NAME NVARCHAR(100),

CREATE TABLE NEWS_ARTICLE (
    ARTICLE_ID NVARCHAR(100) PRIMARY KEY,
    TITLE NVARCHAR(200) NOT NULL,
    SUMMARY NVARCHAR(MAX),
    CONTENT NVARCHAR(MAX) NOT NULL,
    SOURCE NVARCHAR(100),
    PUBLISH_DATE NVARCHAR(50) NOT NULL,
    IS_READ BIT,
    IS_WATCHLIST_RELATED BIT,
    CATEGORY NVARCHAR(50)
);

CREATE TABLE USER_ARTICLE (
    ARTICLE_ID NVARCHAR(100) PRIMARY KEY,
    TITLE NVARCHAR(200) NOT NULL,
    SUMMARY NVARCHAR(MAX),
    CONTENT NVARCHAR(MAX) NOT NULL,
    AUTHOR_CNP NVARCHAR(50),
    SUBMISSION_DATE NVARCHAR(50),
    STATUS NVARCHAR(50),
    TOPIC NVARCHAR(50),
    FOREIGN KEY (AUTHOR_CNP) REFERENCES [USER](CNP)
);

CREATE TABLE RELATED_STOCKS (
    SERIAL_ID INT IDENTITY(1,1) PRIMARY KEY,
    STOCK_NAME NVARCHAR(100) NOT NULL,
    ARTICLE_ID NVARCHAR(100) NOT NULL,
    FOREIGN KEY (ARTICLE_ID) REFERENCES NEWS_ARTICLE(ARTICLE_ID),
    FOREIGN KEY (STOCK_NAME) REFERENCES STOCK(STOCK_NAME)
);

CREATE TABLE HARDCODED_CNPS (
    CNP NVARCHAR(50) PRIMARY KEY
);

DROP TABLE IF EXISTS HARDCODED_CNPS;
